name: Build

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      # Push events on main branch
      - master

jobs:
  build_wheels:
    if: github.event_name == 'push'
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
        cibw_python: ["cp36-*", "cp37-*", "cp38-*","cp39-*","cp310-*" ]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.13.1

      - name: Build wheels (Linux)
        if: contains(matrix.os, 'ubuntu')
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: ${{ matrix.cibw_python }}


      - name: Build wheels (Windows)
        if: contains(matrix.os, 'windows')
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: ${{ matrix.cibw_python }}
          CIBW_SKIP: "*-win32"
          FC: gfortran

      - name: Build wheels (MacOS)
        if: contains(matrix.os, 'macos')
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: ${{ matrix.cibw_python }}

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  

  upload_pypi:
    if: github.event_name == 'push'
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}